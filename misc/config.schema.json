{
  "properties": {
    "extends": {
      "anyOf": [
        {
          "type": "string",
          "description": "Relative or absolute path to another Hindenburg config to base this one off, to extend all values from.",
          "default": "(none)"
        },
        {
          "type": "array",
          "description": "Relative or absolute path to other Hindenburg configs to base this one off, to extend all values from.",
          "items": {
            "type": "string",
            "description": "Relative or absolute path to another Hindenburg config to base this one off, to extend all values from."
          }
        }
      ]
    },
    "clusterName": {
      "type": "string",
      "description": "The name of the cluster that this node belongs to.",
      "default": "Capybara"
    },
    "nodeId": {
      "type": "number",
      "description": "The ID of this node in relation to other nodes in the cluster.",
      "default": 0
    },
    "checkForUpdates": {
      "type": "boolean",
      "description": "Whether or not to check for updates.",
      "default": true
    },
    "autoUpdate": {
      "type": "boolean",
      "description": "Whether or not to auto-update Hindenburg when there is an update available.",
      "default": false
    },
    "exitConfirmation": {
      "type": "boolean",
      "description": "Whether or not to confirm when pressing CTRL+C to close Hindenburg.",
      "default": true
    },
    "defaultLanuage": {
      "type": "string",
      "description": "Default language to localise disconnect messages to.",
      "enum": [
        "en",
        "es_US",
        "pt_BR",
        "pt",
        "ko",
        "ru",
        "nl",
        "fil",
        "fr",
        "de",
        "it",
        "ja",
        "es_ES",
        "zh",
        "ga"
      ],
      "default": "en"
    },
    "acceptedVersions": {
      "type": "array",
      "description": "Accepted game versions that clients can connect with.",
      "items": {
        "type": "string",
        "pattern": "^\\d{4}\\.\\d{1,2}\\.\\d{1,2}(\\.\\d+)?[sei]?$"
      }
    },
    "matchmaker": {
      "type": "object",
      "description": "Configuration for the included Hindenburg http matchmaker.",
      "properties": {
        "port": {
          "type": "number",
          "description": "The port that the matchmaker should listen on.",
          "default": 22021
        }
      }
    },
    "socket": {
      "type": "object",
      "description": "Options regarding the socket that the server listens on.",
      "properties": {
        "port": {
          "type": "number",
          "description": "The port to listen on.",
          "default": 22023
        },
        "additionalPorts": {
          "type": "array",
          "description": "Any additional ports for Hindenburg to listen on.",
          "items": {
              "type": "number"
          }
        },
        "broadcastUnknownGamedata": {
          "type": "boolean",
          "description": "Whether or not to broadcast gamedata messages that don't get handled by the server.",
          "default": false
        },
        "messageOrdering": {
          "type": "boolean",
          "description": "Whether to order reliable packets received from clients.",
          "default": false
        },
        "ip": {
          "type": "string",
          "description": "The IP address of this node, set to `auto` for it to get auto-discovered.",
          "default": "auto"
        },
        "useDtlsLayout": {
          "type": "boolean",
          "description": "Whether or not to use the DTLS transport layout when listening for Hello packets.",
          "default": false
        }
      }
    },
    "gameListing": {
        "type": "object",
        "description": "Options regarding fine-tuning the results of game listings.",
        "properties": {
            "ignorePrivacy": {
                "type": "boolean",
                "description": "Whether to ignore the privacy of a room, and return even private ones.",
                "default": false
            },
            "ignoreSearchTerms": {
                "anyOf": [
                    {
                        "type": "boolean",
                        "description": "Whether to ignore filtering for game listings, and just list every game on the server."
                    },
                    {
                        "type": "array",
                        "description": "Which search terms to ignore",
                        "items": {
                            "enum": [
                                "map",
                                "impostors",
                                "chat",
                                "chatType"
                            ]
                        }
                    }
                ]
            },
            "maxResults": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string",
                        "enum": ["all"]
                    }
                ],
                "type": "boolean",
                "description": "The maximum number of results to return to a client at once. Set to `0`or `\"all\"` to return all available rooms.",
                "default": 10
            },
            "requirePerfectMatches": {
                "type": "boolean",
                "description": "Whether to only return results that are a perfect match to all of the sort terms. Otherwise, Hindenburg will sort results by relevance to the search terms.",
                "default": false
            }
        }
    },
    "plugins": {
      "type": "object",
      "description": "Options regarding global worker plugins, such as disabling them or passing configuration options.",
      "properties": {
        "loadDirectory": {
          "type": "boolean",
          "description": "Whether to load all plugins found in the plugin directories.",
          "default": true
        }
      },
      "patternProperties": {
        ".+": {
          "anyOf": [
            {
              "type": "boolean",
              "description": "Whether to enable or disable this plugin."
            },
            {
              "type": "object",
              "description": "Enable the plugin and pass any configuration values to it."
            }
          ]
        }
      }
    },
    "anticheat": {
      "type": "object",
      "description": "Advanced options for HACS, Hindenburg's Anti-Cheat System.",
      "properties": {
        "penalty": {
          "type": "object",
          "description": "The penalty to give a player for breaking this rule.",
          "properties": {
            "action": {
              "type": "string",
              "description": "The action that should be applied on this user for breaking this rule.",
              "enum": [
                "disconnect",
                "ban",
                "ignore"
              ]
            },
            "strikes": {
              "type": "number",
              "description": "The number of strikes that this user has before they are penalised."
            },
            "banAfterXDisconnects": {
              "type": "number",
              "description": "The number of general disconnects the player should have to have had for breaking this rule until they are banned."
            },
            "banDuration": {
              "type": "number",
              "description": "The length, in seconds, of how long to ban a player for breaking this rule."
            },
            "disconnectMessage": {
              "type": "string",
              "description": "The message to give this player when disconnecting or banning this player."
            }
          }
        },
        "rules": {
          "description": "Configuration for each individual sub-rule.",
          "patternProperties": {
            ".+": {
              "type": [ "boolean", "number", "object" ],
              "$ref": "#/properties/anticheat",
              "patternProperties": {
                ".+": {
                  "type": [
                    "array",
                    "boolean",
                    "number",
                    "object",
                    "string"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "logging": {
      "type": "object",
      "description": "Options for logging.",
      "properties": {
        "hideSensitiveInfo": {
          "type": "boolean",
          "description": "Whether to hide sensitive information from logging, such as ip addresses.",
          "default": false
        },
        "connections": {
          "type": "object",
          "description": "Logging options for client connections.",
          "properties": {
            "format": {
              "type": "array",
              "description": "Custom formatting for the extra information provided when logging client connections. (The part in parenthesis after their username.)",
              "items":{
                "type": "string",
                "enum": [
                  "id",
                  "ip",
                  "ping",
                  "room",
                  "mods",
                  "level",
                  "version",
                  "platform",
                  "language"
                ]
              },
              "uniqueItems": true,
              "default": [ "id", "ip", "ping", "room" ]
            }
          }
        },
        "rooms": {
          "type": "object",
          "description": "Logging options for game rooms.",
          "properties": {
            "format": {
              "type": "array",
              "description": "Custom formatting for the extra information provided when rooms are logged. (The part in parenthesis after the game code.)",
              "items": {
                "type": "string",
                "enum": [
                  "players",
                  "map",
                  "issaah",
                  "privacy"
                ]
              },
              "uniqueItems": true,
              "default": [ "players", "map", "issaah", "privacy" ]
            }
          }
        },
        "players": {
          "type": "object",
          "description": "Logging options for logging players in-game.",
          "properties": {
            "format": {
              "type": "array",
              "description": "Custom formatting for the extra information provided when players are logged. (The part in parenthesis after the player's name.)",
              "items":  {
                "type": "string",
                "enum": [
                  "id",
                  "ping",
                  "mods",
                  "level",
                  "ishost",
                  "platform",
                  "language"
                ]
              },
              "uniqueItems": true,
              "default": [ "id", "ping", "ishost" ]
            }
          }
        }
      }
    },
    "rooms": {
      "type": "object",
      "properties": {
        "checkChatMode": {
          "type": "boolean",
          "description": "Whether or not to make sure players have the same chat mode as the host before joining.",
          "default": false
        },
        "chatCommands": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "prefix": {
                  "type": "string",
                  "description": "The prefix (or command identifier) for commands.",
                  "default": "/"
                },
                "helpCommand": {
                  "type": "boolean",
                  "description": "Whether or not rooms can use the built-in help command.",
                  "default": true
                }
              }
            }
          ]
        },
        "gameCodes": {
          "type": "string",
          "enum": [
            "v1",
            "v2"
          ],
          "description": "The type of game code to generate for rooms, \"v1\" for a 4-letter code and \"v2\" for a 6-letter code.",
          "default": "v2"
        },
        "enforceSettings": {
          "type": "object",
          "description": "Enforce certain settings, preventing the host from changing them.",
          "properties": {
            "maxPlayers": {
              "type": "number"
            },
            "keywords": {
              "type": "string",
              "enum": [
                "All",
                "Other",
                "SpanishAmericas",
                "Korean",
                "Russian",
                "Portuguese",
                "Arabic",
                "Filipino",
                "Polish",
                "English",
                "Japanese",
                "Spanish",
                "PortugueseBrazil",
                "Dutch",
                "French",
                "German",
                "Italian",
                "ChineseSimplified",
                "ChineseTraditional",
                "Irish"
              ]
            },
            "map": {
              "type": "string",
              "enum": [
                "The Skeld",
                "Mira HQ",
                "Polus",
                "The Skeld April Fools",
                "Airship"
              ]
            },
            "playerSpeed": {
              "type": "number"
            },
            "crewmateVision": {
              "type": "number"
            },
            "impostorVision": {
              "type": "number"
            },
            "killCooldown": {
              "type": "number"
            },
            "commonTasks": {
              "type": "number"
            },
            "longTasks": {
              "type": "number"
            },
            "shortTasks": {
              "type": "number"
            },
            "numEmergencies": {
              "type": "number"
            },
            "numImpostors": {
              "type": "number"
            },
            "killDistance": {
              "type": "string",
              "enum": [
                "Short",
                "Medium",
                "Long"
              ]
            },
            "discussionTime": {
              "type": "number"
            },
            "votingTime": {
              "type": "number"
            },
            "isDefaults": {
              "type": "number"
            },
            "emergencyCooldown": {
              "type": "number"
            },
            "confirmEjects": {
              "type": "number"
            },
            "visualTasks": {
              "type": "number"
            },
            "anonymousVotes": {
              "type": "number"
            },
            "taskbarUpdates": {
              "type": "string",
              "enum": [
                "Always",
                "Meetings",
                "Never"
              ]
            }
          },
          "default": {}
        },
        "plugins": {
          "type": "object",
          "description": "Options regarding local room plugins, such as disabling them or passing configuration options.",
          "properties": {
            "loadDirectory": {
              "type": "boolean",
              "description": "Whether to load all plugins in the plugin directory.",
              "default": true
            }
          },
          "patternProperties": {
            ".+": {
              "anyOf": [
                {
                  "type": "boolean",
                  "description": "Whether to enable or disable this plugin."
                },
                {
                  "type": "object",
                  "description": "Enable the plugin, and also pass in any configuration options that the plugin accepts."
                }
              ]
            }
          }
        },
        "serverAsHost": {
          "type": "boolean",
          "description": "Whether the server should act as the host of the room.",
          "default": false
        },
        "advanced": {
            "type": "object",
            "description": "Advanced room options for mod and plugin developers, or knowledgeable server owners.",
            "properties": {
                "unknownObjects": {
                    "anyOf": [
                        {
                            "type": "string",
                            "description": "Ignore _every_ object type and treat all of them as uknown, including standard Among Us objects.",
                            "enum": ["all"]
                        },
                        {
                            "type": "boolean",
                            "description": "Whether or not to allow uknown object types."
                        },
                        {
                            "type": "array",
                            "description": "An array of either spawn IDs or spawn types to allow",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "serverPlayer":  {
          "type": "object",
          "description": "Default appearance for a message sent by the server in game chat.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the player for a message sent by the server in game chat.",
              "default": "<color=yellow>[Server]</color>"
            },
            "color": {
              "type": "string",
              "description": "The color of the player for a message sent by the server in game chat.",
              "default": "Yellow"
            },
            "hat": {
              "type": "string",
              "description": "The hat of the player for a message sent by the server in game chat.",
              "default": "(none)"
            },
            "skin": {
              "type": "string",
              "description": "The skin of the player for a message sent by the server in game chat",
              "default": "(none)"
            },
            "visor": {
              "type": "string",
              "description": "The visor of the player for a message sent by the server in game chat",
              "default": "(none)"
            }
          }
        },
        "createTimeout": {
          "type": "number",
          "description": "The timeout in seconds to wait for a player joins before considering the room empty and destroying it.",
          "default": 10
        }
      }
    },
    "optimizations": {
      "type": "object",
      "properties": {
        "movement": {
          "type": "object",
          "properties": {
            "reuseBuffer": {
              "type": "boolean",
              "description": "Whether or not to re-use the buffer to send to every client, instead of re-constructing the packet each time.",
              "default": true
            },
            "updateRate": {
              "type": "number",
              "description": "How often to actually broadcast movement packets from a single player, should be a very low number, between 1 and 3, where 1 is the most frequent (every packet is broadcasted) and 3 is the least frequent.",
              "default": 1
            },
            "visionChecks": {
              "type": "boolean",
              "description": "Whether or not to check whether or not the player receiving each movement packet is in the vision of the player that moved, so-as to only send movement packets to those who can see it.",
              "default": false
            },
            "deadChecks": {
              "type": "boolean",
              "description": "Whether or not to check whether the sender and the reciever are dead so as to not send movement packets from alive players to dead players.",
              "default": true
            }
          }
        },
        "disablePerspectives": {
          "type": "boolean",
          "description": "Whether or not to completely disable the perspective API for Hindenburg."
        }
      }
    }
  }
}
